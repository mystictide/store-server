# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: dotnet publish
      run: dotnet publish -c Release

  deploy:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Stop Service
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: service store stop
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          passphrase: ${{ secrets.PASSPHRASE }}
          privateKey: ${{ secrets.REMOTE_SSH_KEY }}   
      - name: Copy to Server via SCP
        uses: garygrossgarten/github-action-scp@release
        with:
          local: /home/runner/work/store.server/store.server/bin/Release/net8.0/publish/
          concurrency: 10
          remote: ${{ secrets.REMOTE_TARGET }}
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          passphrase: ${{ secrets.PASSPHRASE }}
          privateKey: ${{ secrets.REMOTE_SSH_KEY }}
        env:
          ASPNETCORE_ENVIRONMENT: Production
      - name: Start Service
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: service store start
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          passphrase: ${{ secrets.PASSPHRASE }}
          privateKey: ${{ secrets.REMOTE_SSH_KEY }}
